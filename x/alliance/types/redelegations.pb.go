// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: alliance/alliance/redelegations.proto

package types

import (
	fmt "fmt"
	_ "github.com/cosmos/cosmos-proto"
	types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/cosmos/gogoproto/gogoproto"
	proto "github.com/cosmos/gogoproto/proto"
	github_com_cosmos_gogoproto_types "github.com/cosmos/gogoproto/types"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	io "io"
	math "math"
	math_bits "math/bits"
	time "time"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf
var _ = time.Kitchen

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// Used internally to keep track of redelegations
type QueuedRedelegation struct {
	Entries []*Redelegation `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (m *QueuedRedelegation) Reset()         { *m = QueuedRedelegation{} }
func (m *QueuedRedelegation) String() string { return proto.CompactTextString(m) }
func (*QueuedRedelegation) ProtoMessage()    {}
func (*QueuedRedelegation) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfbacfa00d70df4b, []int{0}
}
func (m *QueuedRedelegation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *QueuedRedelegation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_QueuedRedelegation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *QueuedRedelegation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueuedRedelegation.Merge(m, src)
}
func (m *QueuedRedelegation) XXX_Size() int {
	return m.Size()
}
func (m *QueuedRedelegation) XXX_DiscardUnknown() {
	xxx_messageInfo_QueuedRedelegation.DiscardUnknown(m)
}

var xxx_messageInfo_QueuedRedelegation proto.InternalMessageInfo

type Redelegation struct {
	// internal or external user address
	DelegatorAddress string `protobuf:"bytes,1,opt,name=delegator_address,json=delegatorAddress,proto3" json:"delegator_address,omitempty"`
	// redelegation source validator
	SrcValidatorAddress string `protobuf:"bytes,2,opt,name=src_validator_address,json=srcValidatorAddress,proto3" json:"src_validator_address,omitempty"`
	// redelegation destination validator
	DstValidatorAddress string `protobuf:"bytes,3,opt,name=dst_validator_address,json=dstValidatorAddress,proto3" json:"dst_validator_address,omitempty"`
	// amount to redelegate
	Balance types.Coin `protobuf:"bytes,4,opt,name=balance,proto3" json:"balance"`
}

func (m *Redelegation) Reset()         { *m = Redelegation{} }
func (m *Redelegation) String() string { return proto.CompactTextString(m) }
func (*Redelegation) ProtoMessage()    {}
func (*Redelegation) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfbacfa00d70df4b, []int{1}
}
func (m *Redelegation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Redelegation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Redelegation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Redelegation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Redelegation.Merge(m, src)
}
func (m *Redelegation) XXX_Size() int {
	return m.Size()
}
func (m *Redelegation) XXX_DiscardUnknown() {
	xxx_messageInfo_Redelegation.DiscardUnknown(m)
}

var xxx_messageInfo_Redelegation proto.InternalMessageInfo

// Used on QueryServer
type RedelegationEntry struct {
	// internal or external user address
	DelegatorAddress string `protobuf:"bytes,1,opt,name=delegator_address,json=delegatorAddress,proto3" json:"delegator_address,omitempty"`
	// redelegation source validator
	SrcValidatorAddress string `protobuf:"bytes,2,opt,name=src_validator_address,json=srcValidatorAddress,proto3" json:"src_validator_address,omitempty"`
	// redelegation destination validator
	DstValidatorAddress string `protobuf:"bytes,3,opt,name=dst_validator_address,json=dstValidatorAddress,proto3" json:"dst_validator_address,omitempty"`
	// amount to redelegate
	Balance types.Coin `protobuf:"bytes,4,opt,name=balance,proto3" json:"balance"`
	// completion_time defines the unix time for redelegation completion.
	CompletionTime time.Time `protobuf:"bytes,5,opt,name=completion_time,json=completionTime,proto3,stdtime" json:"completion_time"`
}

func (m *RedelegationEntry) Reset()         { *m = RedelegationEntry{} }
func (m *RedelegationEntry) String() string { return proto.CompactTextString(m) }
func (*RedelegationEntry) ProtoMessage()    {}
func (*RedelegationEntry) Descriptor() ([]byte, []int) {
	return fileDescriptor_cfbacfa00d70df4b, []int{2}
}
func (m *RedelegationEntry) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *RedelegationEntry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_RedelegationEntry.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *RedelegationEntry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RedelegationEntry.Merge(m, src)
}
func (m *RedelegationEntry) XXX_Size() int {
	return m.Size()
}
func (m *RedelegationEntry) XXX_DiscardUnknown() {
	xxx_messageInfo_RedelegationEntry.DiscardUnknown(m)
}

var xxx_messageInfo_RedelegationEntry proto.InternalMessageInfo

func init() {
	proto.RegisterType((*QueuedRedelegation)(nil), "alliance.alliance.QueuedRedelegation")
	proto.RegisterType((*Redelegation)(nil), "alliance.alliance.Redelegation")
	proto.RegisterType((*RedelegationEntry)(nil), "alliance.alliance.RedelegationEntry")
}

func init() {
	proto.RegisterFile("alliance/alliance/redelegations.proto", fileDescriptor_cfbacfa00d70df4b)
}

var fileDescriptor_cfbacfa00d70df4b = []byte{
	// 448 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x93, 0x3f, 0x6e, 0xd4, 0x40,
	0x14, 0xc6, 0xed, 0x6c, 0x20, 0x61, 0x82, 0x80, 0x35, 0x41, 0x72, 0xb6, 0xb0, 0xa3, 0x48, 0x48,
	0xdb, 0x64, 0x86, 0x84, 0x2a, 0x74, 0x18, 0xa5, 0x41, 0x50, 0x60, 0x10, 0x12, 0x34, 0xd6, 0xd8,
	0x7e, 0x98, 0x91, 0xec, 0x19, 0x6b, 0x66, 0x1c, 0xb1, 0x37, 0x40, 0x54, 0x39, 0x42, 0x0e, 0x81,
	0x38, 0x43, 0xca, 0x88, 0x8a, 0x0a, 0xd0, 0x6e, 0xc3, 0x31, 0xd0, 0xf8, 0x4f, 0xec, 0x68, 0x11,
	0x7b, 0x81, 0x74, 0x6f, 0xfc, 0xbd, 0xef, 0xa7, 0xa7, 0xef, 0xf9, 0xa1, 0x87, 0x34, 0xcf, 0x19,
	0xe5, 0x09, 0x90, 0xcb, 0x42, 0x42, 0x0a, 0x39, 0x64, 0x54, 0x33, 0xc1, 0x15, 0x2e, 0xa5, 0xd0,
	0xc2, 0x19, 0x77, 0x2a, 0xee, 0x8a, 0xc9, 0x76, 0x26, 0x32, 0x51, 0xab, 0xc4, 0x54, 0x4d, 0xe3,
	0xc4, 0x4b, 0x84, 0x2a, 0x84, 0x22, 0x31, 0x55, 0x40, 0x4e, 0x0e, 0x62, 0xd0, 0xf4, 0x80, 0x24,
	0x82, 0xf1, 0x56, 0xdf, 0x69, 0xf4, 0xa8, 0x31, 0x36, 0x8f, 0x56, 0xf2, 0x33, 0x21, 0xb2, 0x1c,
	0x48, 0xfd, 0x8a, 0xab, 0x0f, 0x44, 0xb3, 0x02, 0x94, 0xa6, 0x45, 0xd9, 0x34, 0xec, 0xbd, 0x43,
	0xce, 0xab, 0x0a, 0x2a, 0x48, 0xc3, 0xc1, 0x84, 0xce, 0x11, 0xda, 0x00, 0xae, 0x25, 0x03, 0xe5,
	0xda, 0xbb, 0xa3, 0xe9, 0xd6, 0xa1, 0x8f, 0x97, 0x86, 0xc5, 0x43, 0x47, 0xd8, 0xf5, 0x3f, 0xd9,
	0xfc, 0x7c, 0xe6, 0x5b, 0x7f, 0xce, 0x7c, 0x6b, 0xef, 0xdb, 0x1a, 0xba, 0x7d, 0x85, 0x7a, 0x8c,
	0xc6, 0xed, 0x4b, 0xc8, 0x88, 0xa6, 0xa9, 0x04, 0x65, 0xf8, 0xf6, 0xf4, 0x56, 0xe0, 0x7e, 0xff,
	0xba, 0xbf, 0xdd, 0x4e, 0xfe, 0xb4, 0x51, 0x5e, 0x6b, 0xc9, 0x78, 0x16, 0xde, 0xbb, 0xb4, 0xb4,
	0xdf, 0x9d, 0x17, 0xe8, 0x81, 0x92, 0x49, 0x74, 0x42, 0x73, 0x96, 0x5e, 0x41, 0xad, 0xad, 0x40,
	0xdd, 0x57, 0x32, 0x79, 0xdb, 0xb9, 0x06, 0xb4, 0x54, 0xe9, 0x7f, 0xd0, 0x46, 0xab, 0x68, 0xa9,
	0xd2, 0x4b, 0xb4, 0x23, 0xb4, 0x11, 0xd3, 0xdc, 0xc4, 0xe3, 0xae, 0xef, 0xda, 0xd3, 0xad, 0xc3,
	0x1d, 0xdc, 0x9a, 0xcd, 0xf2, 0x70, 0xbb, 0x3c, 0xfc, 0x4c, 0x30, 0x1e, 0xac, 0x9f, 0xff, 0xf4,
	0xad, 0xb0, 0xeb, 0x1f, 0x04, 0xf7, 0x65, 0x84, 0xc6, 0xc3, 0xe0, 0x8e, 0xb9, 0x96, 0xb3, 0xeb,
	0xf4, 0xfe, 0x97, 0x9e, 0xf3, 0x12, 0xdd, 0x4d, 0x44, 0x51, 0xe6, 0x60, 0x02, 0x8b, 0xcc, 0x5f,
	0xee, 0xde, 0xa8, 0x11, 0x13, 0xdc, 0x9c, 0x00, 0xee, 0x4e, 0x00, 0xbf, 0xe9, 0x4e, 0x20, 0xd8,
	0x34, 0x8c, 0xd3, 0x5f, 0xbe, 0x1d, 0xde, 0xe9, 0xcd, 0x46, 0xee, 0x97, 0x11, 0x3c, 0x3f, 0x9f,
	0x7b, 0xf6, 0xc5, 0xdc, 0xb3, 0x7f, 0xcf, 0x3d, 0xfb, 0x74, 0xe1, 0x59, 0x17, 0x0b, 0xcf, 0xfa,
	0xb1, 0xf0, 0xac, 0xf7, 0x8f, 0x32, 0xa6, 0x3f, 0x56, 0x31, 0x4e, 0x44, 0x41, 0x34, 0x48, 0x49,
	0xf7, 0x0b, 0xc1, 0x61, 0xd6, 0x1f, 0xfd, 0xa7, 0xbe, 0xd4, 0xb3, 0x12, 0x54, 0x7c, 0xb3, 0x9e,
	0xe1, 0xf1, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xaa, 0x1c, 0x6b, 0x75, 0x21, 0x04, 0x00, 0x00,
}

func (m *QueuedRedelegation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *QueuedRedelegation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *QueuedRedelegation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if len(m.Entries) > 0 {
		for iNdEx := len(m.Entries) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Entries[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintRedelegations(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *Redelegation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Redelegation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Redelegation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	{
		size, err := m.Balance.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintRedelegations(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	if len(m.DstValidatorAddress) > 0 {
		i -= len(m.DstValidatorAddress)
		copy(dAtA[i:], m.DstValidatorAddress)
		i = encodeVarintRedelegations(dAtA, i, uint64(len(m.DstValidatorAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.SrcValidatorAddress) > 0 {
		i -= len(m.SrcValidatorAddress)
		copy(dAtA[i:], m.SrcValidatorAddress)
		i = encodeVarintRedelegations(dAtA, i, uint64(len(m.SrcValidatorAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.DelegatorAddress) > 0 {
		i -= len(m.DelegatorAddress)
		copy(dAtA[i:], m.DelegatorAddress)
		i = encodeVarintRedelegations(dAtA, i, uint64(len(m.DelegatorAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *RedelegationEntry) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *RedelegationEntry) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *RedelegationEntry) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	n2, err2 := github_com_cosmos_gogoproto_types.StdTimeMarshalTo(m.CompletionTime, dAtA[i-github_com_cosmos_gogoproto_types.SizeOfStdTime(m.CompletionTime):])
	if err2 != nil {
		return 0, err2
	}
	i -= n2
	i = encodeVarintRedelegations(dAtA, i, uint64(n2))
	i--
	dAtA[i] = 0x2a
	{
		size, err := m.Balance.MarshalToSizedBuffer(dAtA[:i])
		if err != nil {
			return 0, err
		}
		i -= size
		i = encodeVarintRedelegations(dAtA, i, uint64(size))
	}
	i--
	dAtA[i] = 0x22
	if len(m.DstValidatorAddress) > 0 {
		i -= len(m.DstValidatorAddress)
		copy(dAtA[i:], m.DstValidatorAddress)
		i = encodeVarintRedelegations(dAtA, i, uint64(len(m.DstValidatorAddress)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.SrcValidatorAddress) > 0 {
		i -= len(m.SrcValidatorAddress)
		copy(dAtA[i:], m.SrcValidatorAddress)
		i = encodeVarintRedelegations(dAtA, i, uint64(len(m.SrcValidatorAddress)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.DelegatorAddress) > 0 {
		i -= len(m.DelegatorAddress)
		copy(dAtA[i:], m.DelegatorAddress)
		i = encodeVarintRedelegations(dAtA, i, uint64(len(m.DelegatorAddress)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintRedelegations(dAtA []byte, offset int, v uint64) int {
	offset -= sovRedelegations(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *QueuedRedelegation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Entries) > 0 {
		for _, e := range m.Entries {
			l = e.Size()
			n += 1 + l + sovRedelegations(uint64(l))
		}
	}
	return n
}

func (m *Redelegation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.DelegatorAddress)
	if l > 0 {
		n += 1 + l + sovRedelegations(uint64(l))
	}
	l = len(m.SrcValidatorAddress)
	if l > 0 {
		n += 1 + l + sovRedelegations(uint64(l))
	}
	l = len(m.DstValidatorAddress)
	if l > 0 {
		n += 1 + l + sovRedelegations(uint64(l))
	}
	l = m.Balance.Size()
	n += 1 + l + sovRedelegations(uint64(l))
	return n
}

func (m *RedelegationEntry) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.DelegatorAddress)
	if l > 0 {
		n += 1 + l + sovRedelegations(uint64(l))
	}
	l = len(m.SrcValidatorAddress)
	if l > 0 {
		n += 1 + l + sovRedelegations(uint64(l))
	}
	l = len(m.DstValidatorAddress)
	if l > 0 {
		n += 1 + l + sovRedelegations(uint64(l))
	}
	l = m.Balance.Size()
	n += 1 + l + sovRedelegations(uint64(l))
	l = github_com_cosmos_gogoproto_types.SizeOfStdTime(m.CompletionTime)
	n += 1 + l + sovRedelegations(uint64(l))
	return n
}

func sovRedelegations(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozRedelegations(x uint64) (n int) {
	return sovRedelegations(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *QueuedRedelegation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRedelegations
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: QueuedRedelegation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: QueuedRedelegation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Entries", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRedelegations
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRedelegations
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRedelegations
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Entries = append(m.Entries, &Redelegation{})
			if err := m.Entries[len(m.Entries)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRedelegations(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRedelegations
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *Redelegation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRedelegations
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Redelegation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Redelegation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelegatorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRedelegations
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRedelegations
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRedelegations
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DelegatorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrcValidatorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRedelegations
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRedelegations
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRedelegations
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SrcValidatorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DstValidatorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRedelegations
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRedelegations
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRedelegations
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DstValidatorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Balance", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRedelegations
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRedelegations
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRedelegations
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Balance.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRedelegations(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRedelegations
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *RedelegationEntry) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowRedelegations
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: RedelegationEntry: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: RedelegationEntry: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DelegatorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRedelegations
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRedelegations
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRedelegations
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DelegatorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SrcValidatorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRedelegations
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRedelegations
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRedelegations
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SrcValidatorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DstValidatorAddress", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRedelegations
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthRedelegations
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthRedelegations
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DstValidatorAddress = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Balance", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRedelegations
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRedelegations
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRedelegations
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := m.Balance.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CompletionTime", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowRedelegations
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthRedelegations
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthRedelegations
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if err := github_com_cosmos_gogoproto_types.StdTimeUnmarshal(&m.CompletionTime, dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipRedelegations(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthRedelegations
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipRedelegations(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowRedelegations
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRedelegations
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowRedelegations
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthRedelegations
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupRedelegations
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthRedelegations
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthRedelegations        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowRedelegations          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupRedelegations = fmt.Errorf("proto: unexpected end of group")
)
